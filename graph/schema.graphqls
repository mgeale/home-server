type Balance {
  id: ID!
  name: String!
  balance: Float!
  balanceaud: Float!
  pricebookid: Int!
  productid: Int!
  created: String!
}

type Transaction {
  id: ID!
  name: String!
  amount: Float!
  date: String!
  type: String!
  created: String!
}

input RefreshTokenInput{
  token: String!
}

input Login {
  username: String!
  password: String!
}

input NewBalance {
  name: String!
  balance: Float!
  balanceaud: Float!
  pricebookid: Int!
  productid: Int!
}

input NewTransaction {
  name: String!
  amount: Float!
  date: String!
  type: String!
}

input UpdateBalance {
  id: ID!
  name: String!
  balance: Float!
  balanceaud: Float!
  pricebookid: Int!
  productid: Int!
}

input UpdateTransaction {
  id: ID!
  name: String!
  amount: Float!
  date: String!
  type: String!
}

enum FilterKind {
  EQUAL
  NOT_EQUAL
  GREATER
  GREATER_OR_EQUAL
  LESS
  LESS_OR_EQUAL
}

enum SortDirection {
  ASC
  DESC
}

enum BalanceField {
  id
  name
  balance
  balanceaud
  pricebookid
  productid
  created
}

input BalanceFilter {
  field: BalanceField!
  kind: FilterKind!
  value: String!
}

input BalanceSort {
  field: BalanceField!
  direction: SortDirection!
}

enum TransactionField {
  id
  name
  balance
  balanceaud
  pricebookid
  productid
  created
}

input TransactionFilter {
  field: TransactionField!
  kind: FilterKind!
  value: String!
}

input TransactionSort {
  field: TransactionField!
  direction: SortDirection!
}

type Query {
  balances(
    where: [BalanceFilter!] = []
    orderBy: BalanceSort! = { field: created, direction: DESC }
    limit: Int = 20
  ): [Balance!]!
  transactions(
    where: [TransactionFilter!] = []
    orderBy: TransactionSort! = { field: created, direction: DESC }
    limit: Int = 20
  ): [Transaction!]!
  balanceById(id: ID!): Balance!
  transactionById(id: ID!): Transaction!
}

type Mutation {
  createBalance(input: NewBalance!): Int!
  createTransaction(input: NewTransaction!): Int!
  updateBalance(input: UpdateBalance!): Int!
  updateTransaction(input: UpdateTransaction!): Int!
  deleteBalance(id: ID!): Int!
  deleteTransaction(id: ID!): Int!
}