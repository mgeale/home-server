type Balance {
  id: ID!
  name: String!
  balance: Float!
  balanceaud: Float!
  pricebookid: Int!
  productid: Int!
  created: String!
}

type Transaction {
  id: ID!
  name: String!
  amount: Float!
  date: String!
  type: String!
  created: String!
}

input RefreshTokenInput{
  token: String!
}

input Login {
  username: String!
  password: String!
}

input NewBalance {
  name: String!
  balance: Float!
  balanceaud: Float!
  pricebookid: Int!
  productid: Int!
}

input NewTransaction {
  name: String!
  amount: Float!
  date: String!
  type: String!
}

input UpdateBalance {
  balance: Float!
  balanceaud: Float!
  pricebookid: Int!
  productid: Int!
}

input UpdateTransaction {
  amount: Float!
  date: String!
  type: String!
}

type Query {
  balances: [Balance!]!
  transactions: [Transaction!]!
  balanceById(id: ID!): Balance!
  transactionById(id: ID!): Transaction!
}

type Mutation {
  createBalance(input: NewBalance!): Int!
  createTransaction(input: NewTransaction!): Int!
  updateBalance(input: UpdateBalance!): Int!
  updateTransaction(input: UpdateTransaction!): Int!
  deleteBalance(id: ID!): Int!
  deleteTransaction(id: ID!): Int!
}